name: Reusabale - Build and Push Jenkins Docker Images to ECR

on:
  workflow_call:
    inputs:
      dockerfile_dir:
        required: true
        type: string
        description: The directory containing the Dockerfile
      image_config_file:
        required: true
        type: string
        description: The file containing the image configuration
      ecr_repo:
        required: true
        type: string
        description: The ECR repository to push the image to
      ansible_playbook_dir:
        required: true
        type: string
        description: The directory where ansible playbook resides
      ansible_playbook_file_name:
        required: true
        type: string
        description: The file name(.yml) of the Ansible playbook to run
      environment_name:
        required: true
        type: string
        description: the environment(prod/staging) to deploy to
      target_service:
        required: true
        type: string
        description: the target service name you are building docker image for(found in docker-compose.yml file)
      docker_runtime_os:
        required: true
        type: string
        description: the runtime os where the docker image build will happen
      docker_image_name:
        required: true
        type: string
        description: the name of the docker image being built        

    secrets:
      env_file_contents:
        required: true
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      aws_region:
        required: true
        
jobs:
  build-and-push-docker-image-to-ecr:
    # Ansible doesnt run on windows unless you remotely connect a windows machine to run 
    # which is handled in ansible playbooks
    runs-on: 'ubuntu-latest'
    environment: ${{inputs.environment_name}}
    env:
      DOCKERFILE_DIR: ${{ inputs.dockerfile_dir }}
      IMAGE_CONFIG_FILE: ${{ inputs.image_config_file }} 
      ECR_REPO: ${{inputs.ecr_repo}}/${{inputs.environment_name}}
      ANSIBLE_PLAYBOOK_DIR: ${{ inputs.ansible_playbook_dir }}
      ANSIBLE_PLAYBOOK_FILE_NAME: ${{ inputs.ansible_playbook_file_name }}
      ENV_FILE_CONTENTS: ${{ secrets.env_file_contents }}
      DOCKER_SERVICE_NAME: ${{ inputs.target_service}}
      DOCKER_RUNTIME_OS: ${{inputs.docker_runtime_os}}
      ENVIRONMENT: ${{inputs.environment_name}}
      DOCKER_IMAGE_NAME: ${{inputs.docker_image_name}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Ansible and required collections and roles
        run: |
          pip install --upgrade pip
          pip install ansible PyYAML
          pip install -r "${{ env.ANSIBLE_PLAYBOOK_DIR}}/pip-requirements.txt"
          ansible-galaxy collection install -r "${{ env.ANSIBLE_PLAYBOOK_DIR}}/ansible-collections.yml"
          ansible-galaxy role install -r "${{ env.ANSIBLE_PLAYBOOK_DIR}}/ansible-roles.yml"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ secrets.aws_region}}

      - name: Read image tag from config
        id: tag_config
        run: |
          TAG=$(python3 -c "import yaml; print(yaml.safe_load(open('${{ env.IMAGE_CONFIG_FILE }}'))['image_tag'])")
          echo "DOCKER_IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: Create env variables for ansible
        run: |
          cat <<EOF > ${{ env.DOCKERFILE_DIR }}/.env
          ${{secrets.env_file_contents}}
          EOF
          export DOCKERFILE_ABSOLUTE_DIR="$(pwd)/${{ env.DOCKERFILE_DIR }}"
          echo "DOCKERFILE_ABSOLUTE_DIR=$DOCKERFILE_ABSOLUTE_DIR" >> $GITHUB_ENV
          echo "DOCKER_SERVICE_NAME=$DOCKER_SERVICE_NAME" >> $GITHUB_ENV
          echo "DOCKER_RUNTIME_OS=$DOCKER_RUNTIME_OS" >> $GITHUB_ENV
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME" >> $GITHUB_ENV              

      - name: Run Ansible playbook to build and push docker image (Linux)
        if: ${{ env.DOCKER_RUNTIME_OS == 'linux' }}
        run: |
          ansible-playbook "${{ env.ANSIBLE_PLAYBOOK_DIR }}/${{ env.ANSIBLE_PLAYBOOK_FILE_NAME }}" \
            --extra-vars "@${{ env.ANSIBLE_PLAYBOOK_DIR }}/extra-vars.yml" -v
