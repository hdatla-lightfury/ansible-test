# name: Build and Push Jenkins Docker Images to ECR

# on:
#   push:
#     paths:
#       - 'images/docker/jenkins/agent/windows-runtime/**'
#       - 'images/docker/jenkins/master/linux-runtime/**'

# jobs:
#   build-jenkins-agent-android-windows-runtime:
#     if: contains(join(github.event.head_commit.modified, ','), 'images/docker/jenkins/agent/windows-runtime/')
#     runs-on: ubuntu-latest
#     env:
#       DOCKERFILE_DIR: images/docker/jenkins/agent/windows-runtime/android
#       IMAGE_CONFIG_FILE: images/docker/jenkins/agent/windows-runtime/android/image-config.yml
#       ECR_REPO: jenkins/agent/prod
#       ANSIBLE_PLAYBOOK: configuration/ansible/playbooks/docker/build-push-jenkins-master.yml

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: 3.11

#       - name: Install Ansible and required collections
#         run: |
#           pip install --upgrade pip
#           pip install ansible PyYAML
#           pip install -r pip-requirements.txt
#           ansible-galaxy collection install -r ansible-collections.yml

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

#       - name: Read image tag from config
#         id: tag_config
#         run: |
#           TAG=$(python3 -c "import yaml; print(yaml.safe_load(open('${{ env.IMAGE_CONFIG_FILE }}'))['image_tag'])")
#           echo "tag=$TAG" >> $GITHUB_OUTPUT

#       - name: Run Ansible playbook to build and push agent image
#         run: |
#           ansible-playbook ${{ env.ANSIBLE_PLAYBOOK }} \
#             --extra-vars "dockerfile_dir=$(pwd)/${{ env.DOCKERFILE_DIR }} \
#                           ecr_repository=${{ env.ECR_REPO }} \
#                           docker_image_tag=${{ steps.tag_config.outputs.tag }} \
#                           aws_region=${{ secrets.AWS_DEFAULT_REGION }}" -v

#   build-jenkins-master-linux-runtime:
#     if: contains(join(github.event.head_commit.modified, ','), 'images/docker/jenkins/master/linux-runtime/')
#     runs-on: ubuntu-latest
#     env:
#       DOCKERFILE_DIR: images/docker/jenkins/master/linux-runtime
#       IMAGE_CONFIG_FILE: images/docker/jenkins/master/linux-runtime/image-config.yml
#       ECR_REPO: jenkins/master/prod
#       ANSIBLE_PLAYBOOK: configuration/ansible/playbooks/docker/build-push-docker-images.yml

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: 3.11

#       - name: Install Ansible and required collections
#         run: |
#           pip install --upgrade pip
#           pip install ansible PyYAML
#           ansible-galaxy collection install amazon.aws community.docker

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

#       - name: Read image tag from config
#         id: tag_config
#         run: |
#           TAG=$(python3 -c "import yaml; print(yaml.safe_load(open('${{ env.IMAGE_CONFIG_FILE }}'))['image_tag'])")
#           echo "tag=$TAG" >> $GITHUB_OUTPUT
#       - name: Create .env file in Docker build directory
#         run: |
#           cat <<EOF > ${{ env.DOCKERFILE_DIR }}/.env
#           CASC_JENKINS_CONFIG=/var/jenkins_home/jenkins-casc.yaml
#           SLACK_TOKEN=${{ secrets.SLACK_TOKEN }}
#           JENKINS_ADMIN_PASSWORD=${{ secrets.JENKINS_ADMIN_PASSWORD }}
#           PERFORCE_TRIGGER_API_TOKEN=${{ secrets.PERFORCE_TRIGGER_API_TOKEN }}
#           AUTHSPHERE_TOKEN=${{ secrets.AUTHSPHERE_TOKEN }}
#           SWARM_AGENT_TOKEN=${{ secrets.SWARM_AGENT_TOKEN }}
#           PERFORCE_USERNAME=${{ secrets.PERFORCE_USERNAME }}
#           PERFORCE_PASSWORD=${{ secrets.PERFORCE_PASSWORD }}
#           PERFORCE_PORT=${{ secrets.PERFORCE_PORT }}
#           GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
#           GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
#           JENKINS_ADMIN_GOOGLE_APP_PASSWORD=${{ secrets.JENKINS_ADMIN_GOOGLE_APP_PASSWORD }}
#           EOF

#       - name: Run Ansible playbook to build and push master image
#         run: |
#           ansible-playbook ${{ env.ANSIBLE_PLAYBOOK }} \
#             --extra-vars "dockerfile_dir=$(pwd)/${{ env.DOCKERFILE_DIR }} \
#                           ecr_repository=${{ env.ECR_REPO }} \
#                           docker_image_tag=${{ steps.tag_config.outputs.tag }} \
#                           aws_region=${{ secrets.AWS_DEFAULT_REGION }}" -v
