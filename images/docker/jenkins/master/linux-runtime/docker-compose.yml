services:
  jenkins-master-linux:
    image: jenkins-master-linux
    container_name: jenkins-master-linux
    build:
      context: .
      dockerfile: Dockerfile
      args:
        CASC_JENKINS_CONFIG: /var/jenkins_home/jenkins-casc.yaml
        SLACK_TOKEN: ${SLACK_TOKEN}
        JENKINS_ADMIN_PASSWORD: ${JENKINS_ADMIN_PASSWORD}
        PERFORCE_TRIGGER_API_TOKEN: ${PERFORCE_TRIGGER_API_TOKEN}
        AUTHSPHERE_TOKEN: ${AUTHSPHERE_TOKEN}
        SWARM_AGENT_TOKEN: ${SWARM_AGENT_TOKEN}
        PERFORCE_USERNAME: ${PERFORCE_USERNAME}
        PERFORCE_PASSWORD: ${PERFORCE_PASSWORD}
        PERFORCE_PORT: ${PERFORCE_PORT}
        GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
        GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
        JENKINS_ADMIN_GOOGLE_APP_PASSWORD: ${JENKINS_ADMIN_GOOGLE_APP_PASSWORD}
        GITHUB_USERNAME: ${GITHUB_USERNAME}
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        SEED_JOB_GITHUB_BRANCH: ${SEED_JOB_GITHUB_BRANCH}
        ENVIRONMENT: ${ENVIRONMENT}
    ports:
      - "8080:8080"  # Jenkins UI
      - "50000:50000"  # Jenkins agent communication
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Docker socket to allow Docker commands inside Jenkins
    networks:
      - jenkins-network
    restart: on-failure
volumes:
  jenkins_home:
networks:
  jenkins-network:
    driver: bridge
